name: Build
on:
  push:
    branches: [main]
    tags: [v*]
  pull_request:
    branches: [main]

env:
  WEBMESH_VERSION: main

jobs:
  build:
    name: Build Package
    strategy:
      fail-fast: false
      matrix:
        target: [linux, mac, win]
        include:
          - target: linux
            runner: ${{ vars.LINUX_BUILD_PLATFORM }}
          - target: mac
            runner: ${{ vars.MACOS_BUILD_PLATFORM }}
          - target: win
            runner: ${{ vars.WINDOWS_BUILD_PLATFORM }}
    runs-on: ${{ matrix.runner }}
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout Webmesh
        uses: actions/checkout@v4
        with:
          repository: webmeshproj/webmesh
          ref: ${{ env.WEBMESH_VERSION }}
          path: webmesh
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: stable
          check-latest: true
          cache: ${{ !startswith(matrix.runner, 'self-hosted') }}
          cache-dependency-path: webmesh/go.sum

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          check-latest: true
          node-version-file: .nvmrc

      - name: Build Webmesh Helper Daemon
        if: ${{ matrix.target != 'linux' }}
        env:
          PARALLEL: 6
        run: cd webmesh && make dist-webmeshd

      - name: Build Electron App
        env:
          GH_TOKEN: ${{ github.token }}
        run: yarn clean && yarn && yarn build:${{ matrix.target }}
